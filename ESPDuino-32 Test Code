# MyCodes

#include <Arduino.h>
#include <analogWrite.h>
#include "BluetoothSerial.h"

#if ARDUINO >= 100
#include "Arduino.h"
#else
#include "WProgram.h"
#include "pins_arduino.h"
#endif

#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif
char data = 0;
BluetoothSerial SerialBT;

void setup() {
  Serial.begin(112500);
 
  SerialBT.begin("ESP32Car"); //Bluetooth device name
  Serial.println("The device started, now you can pair it with bluetooth!");
 
 pinMode(2, OUTPUT);//M1 Rear Right
 pinMode(3, OUTPUT);
 pinMode(6, OUTPUT);//Enable
 
 pinMode(4, OUTPUT);//M2 Front Right
 pinMode(5, OUTPUT);
 pinMode(9, OUTPUT);//Enable
 
 pinMode(7, OUTPUT);//M3 Rear Left
 pinMode(8, OUTPUT);
 pinMode(10, OUTPUT);//Enable

 pinMode(13, OUTPUT);//M4 Front Left
 pinMode(12, OUTPUT);
 pinMode(11, OUTPUT);//Enable

 pinMode(26, OUTPUT);//Test
 digitalWrite(26,1);

digitalWrite(2,0);
digitalWrite(3,1);
digitalWrite(6,1);
 
 vTaskDelay(1000 / portTICK_PERIOD_MS);
 xTaskCreate(task1,"task1", 2048, NULL,1,NULL);
 xTaskCreate(task2,"task2", 2048, NULL,1,NULL); 
}
void loop() {
vTaskDelay(1000 / portTICK_PERIOD_MS);
//if(Serial.available() > 0) // Προχώρα παρακάτω μόνο αν έλαβες κάτι...
//{
//data = Serial.read(); //Διάβασε το byte που ήρθε και αποθήκευσέ το
//if(data == 11) //Αν έλαβες τον αριθμό 11...
//digitalWrite(2, HIGH); //Άναψε το πρώτο LED
//else if(data == 10) //Αν έλαβες τον αριθμό 10...
//digitalWrite(2, LOW); //Σβήσε το πρώτο LED
//else if(data == 21) //Αν έλαβες τον αριθμό 21...
//digitalWrite(3, HIGH); //Άναψε το δεύτερο LED
//else if(data == 20) //Αν έλαβες τον αριθμό 20...
//digitalWrite(3, LOW); //Σβήσε το δεύτερο LED
//}


analogWrite(6,128);

}

void task1( void * parameter )
{
  while(1) {
   Serial.println("Hello World!");
   vTaskDelay(1000 / portTICK_PERIOD_MS);
  }
}
void task2( void * parameter)
{
  while(1) {
      Serial.println("high!");
     vTaskDelay(500 / portTICK_PERIOD_MS);
      Serial.println("low!");
     vTaskDelay(500 / portTICK_PERIOD_MS);
  } 
}
